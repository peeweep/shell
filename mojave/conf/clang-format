## Based On Style
BasedOnStyle: Google
PointerAlignment: Left
<<<<<<< HEAD
TabWidth: 2
=======
# 总是在template声明后换行
AlwaysBreakTemplateDeclarations: true
#缩进宽度
IndentWidth: 2
# 连续的空行保留几行
MaxEmptyLinesToKeep: 1
# 在 @property 后面添加空格, \@property (readonly) 而不是 \@property(readonly).
ObjCSpaceAfterProperty: true
# OC block后面的缩进
ObjCBlockIndentWidth: 2

ConstructorInitializerIndentWidth: 2
ContinuationIndentWidth: 2

# 是否允许短方法单行
AllowShortFunctionsOnASingleLine: true
# 是否允许短if单行 If true, if (a) return; 可以放到同一行
AllowShortIfStatementsOnASingleLine: true
#注释对齐
AlignTrailingComments: true
# 换行的时候对齐操作符
#AlignOperands: true
# 中括号两边空格 [] 
SpacesInSquareBrackets: false
# 小括号两边添加空格
SpacesInParentheses : false
#多行声明语句按照=对齐
AlignConsecutiveDeclarations: true
#连续的赋值语句以 = 为中心对齐
>>>>>>> 7b74df845411e76d4f47d558790b698300cd7b45
AlignConsecutiveAssignments: true
# int aaaa        = 12;
# float b         = 23;
# std::string ccc = 23;
AlignConsecutiveDeclarations: true
# int         aaaa = 12;
# float       b = 23;
# std::string ccc = 23;
AlwaysBreakTemplateDeclarations: Yes 
## true:
# template <typename T>
# T foo() {}
## false:
# template <typename T> T foo() {}
## Same as Google Default:
AllowAllParametersOfDeclarationOnNextLine: true
AllowShortIfStatementsOnASingleLine: false
IndentWidth: 2
MaxEmptyLinesToKeep: 2 
SortIncludes: true
UseTab: Never
